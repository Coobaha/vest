// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stateful behavior Should merge skipped fields with previous values 1`] = `
{
  "done": [Function],
  "errorCount": 1,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 1,
  "tests": {
    "field_1": {
      "errorCount": 1,
      "errors": [
        "field_statement_1",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_2": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_3": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_4": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_5": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 0,
}
`;

exports[`Stateful behavior Should merge skipped fields with previous values 2`] = `
{
  "done": [Function],
  "errorCount": 3,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 3,
  "tests": {
    "field_1": {
      "errorCount": 1,
      "errors": [
        "field_statement_1",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_2": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_3": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_4": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_5": {
      "errorCount": 2,
      "errors": [
        "field_statement_5",
        "field_statement_6",
      ],
      "testCount": 2,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 0,
}
`;

exports[`Stateful behavior Should merge skipped fields with previous values 3`] = `
{
  "done": [Function],
  "errorCount": 4,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 7,
  "tests": {
    "field_1": {
      "errorCount": 1,
      "errors": [
        "field_statement_1",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_2": {
      "errorCount": 1,
      "errors": [
        "field_statement_2",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "field_3": {
      "errorCount": 0,
      "errors": [],
      "testCount": 1,
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
    "field_4": {
      "errorCount": 0,
      "errors": [],
      "testCount": 2,
      "valid": true,
      "warnCount": 1,
      "warnings": [
        "field_statement_4",
      ],
    },
    "field_5": {
      "errorCount": 2,
      "errors": [
        "field_statement_5",
        "field_statement_6",
      ],
      "testCount": 2,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 1,
}
`;

exports[`more complex Should run correctly 1`] = `
{
  "errorCount": 0,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 0,
  "tests": {},
  "valid": false,
  "warnCount": 0,
}
`;

exports[`more complex Should run correctly 2`] = `
{
  "errorCount": 0,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 2,
  "tests": {
    "confirm": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "password": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "username": {
      "errorCount": 0,
      "errors": [],
      "testCount": 2,
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 0,
}
`;

exports[`more complex Should run correctly 4`] = `
{
  "errorCount": 1,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 3,
  "tests": {
    "confirm": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "password": {
      "errorCount": 1,
      "errors": [
        "password is required",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "username": {
      "errorCount": 0,
      "errors": [],
      "testCount": 2,
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 0,
}
`;

exports[`more complex Should run correctly 6`] = `
{
  "errorCount": 1,
  "getErrors": [Function],
  "getErrorsByGroup": [Function],
  "getWarnings": [Function],
  "getWarningsByGroup": [Function],
  "groups": {},
  "hasErrors": [Function],
  "hasErrorsByGroup": [Function],
  "hasWarnings": [Function],
  "hasWarningsByGroup": [Function],
  "isValid": [Function],
  "isValidByGroup": [Function],
  "suiteName": undefined,
  "testCount": 3,
  "tests": {
    "confirm": {
      "errorCount": 0,
      "errors": [],
      "testCount": 0,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "password": {
      "errorCount": 1,
      "errors": [
        "password is required",
      ],
      "testCount": 1,
      "valid": false,
      "warnCount": 0,
      "warnings": [],
    },
    "username": {
      "errorCount": 0,
      "errors": [],
      "testCount": 2,
      "valid": true,
      "warnCount": 0,
      "warnings": [],
    },
  },
  "valid": false,
  "warnCount": 0,
}
`;
